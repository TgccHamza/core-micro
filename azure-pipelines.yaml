trigger:
  branches:
    include:
      - dev

pool:
  vmImage: ubuntu-latest

variables:
  imageName: "gamicore"
  imageTag: "$(Build.BuildId)"
  acrUrl: "tg2cregistry.azurecr.io"

stages:
  - stage: Build
    jobs:
      - job: BuildAndPush
        pool:
          vmImage: "ubuntu-latest"
        steps:

          - task: Docker@2
            displayName: Build & Push to ACR
            inputs:
              containerRegistry: "ACR-Service"
              repository: "$(imageName)"
              command: "buildAndPush"
              Dockerfile: "**/Dockerfile"
              tags: |
                $(imageTag)
                latest



  - stage: Deploy
    jobs:
      - deployment: DeployToAKS
        pool:
          vmImage: "ubuntu-latest"
        environment: "dev"
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    echo "Image name: $(imageName)"
                    echo "Image tag: $(imageTag)"
                  displayName: "Debug image variables"

                - checkout: self
                  displayName: "Checkout"

                - task: replacetokens@6
                  inputs:
                    sources: "$(Pipeline.Workspace)/s/k8s/gamicore-deployment.yaml"
                    tokenPattern: "azpipelines"
                    logLevel: "debug"
                    ifNoFilesFound: "warn"

                - task: KubernetesManifest@1
                  inputs:
                    action: "deploy"
                    connectionType: "kubernetesServiceConnection"
                    kubernetesServiceConnection: "dev-KubernetesCluster2-gamitool-dev-1730970145939"
                    namespace: "gamitool-dev"
                    manifests: "$(Pipeline.Workspace)/s/k8s/gamicore-deployment.yaml"
                    containers: "$(acrUrl)/$(imageName):$(imageTag)"